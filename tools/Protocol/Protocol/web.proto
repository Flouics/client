syntax = "proto3";
package game;


// ------------------------------------通用麻将命令 0x0001 ~ 0x0FFF-------------------------------------------------

message CreateRoomRequest {
    uint32 room_id = 1;  // 6位房间号
    string owner = 2;  // 房主UUID
    string kwargs = 3;  // json 创建房间参数，由具体游戏各自解析字段
    string room_uuid = 4; // 房间唯一标识
}

message CreateRoomResponse {
    uint32 code = 1;  // 返回开房结果
}
	
// web批量创建房间接口
message CreateRoomBatchWebRequest {
    string owner = 1;  // 房主UUID
    string kwargs = 2;  // json 创建房间参数，由具体游戏各自解析字段
	message Room {
		uint32 room_id = 1;  // 6位房间号
		string room_uuid = 2; // 房间唯一标识
	}
	repeated Room room = 3;
}

message CreateRoomBatchWebResponse {
    uint32 code = 1;  // 返回开房结果
	message Room {
		uint32 room_id = 1;  // 6位房间号
		string room_uuid = 2; // 房间唯一标识
		uint32 status = 3;  // 0 创建成功  1 创建失败
	}
	repeated Room room = 2;
}

//web 批量强制解散房间接口
message DismissRoomBatchWebRequest {
    uint32 game_type = 1;
    uint32 app_id = 2;
    string owner = 3;
	
	message Room {
		uint32 room_id = 1;  // 6位房间号
		string room_uuid = 2; // 房间唯一标识
	}
	repeated Room room = 4;
}

message DismissRoomBatchWebResponse {
    uint32 code = 1;  // 返回解散房间结果
    uint32 game_type = 2;
    uint32 app_id = 3;
    string owner = 4;
	message Room {
		uint32 room_id = 1;  // 6位房间号
		string room_uuid = 2; // 房间唯一标识
		uint32 status = 3;  // 0 解散成功 1 房间已开局 2 房间不存在 
	}
	repeated Room room = 5;
}

message EnterRoomWebResponse {
    uint32 code = 1;  // 返回退出房间结果
    uint32 room_id = 2;  // 6位房间号
    string player = 3;  // 玩家UUID
    uint32 game_type = 4;
    uint32 app_id = 5;
}

message ExitRoomWebResponse {
    uint32 code = 1;  // 返回退出房间结果
    uint32 room_id = 2;  // 6位房间号
    string player = 3;  // 玩家UUID
    uint32 game_type = 4;
    uint32 app_id = 5;
}

//DISMISS_ROOM = 0x1006  # 解散房间  -> 0x0004
message DismissRoomRequest {}

message DismissRoomResponse {
    uint32 code = 1;  // 返回解散房间结果
    uint32 flag = 2;  // 0 房主发起解散 1 投票发起解散
}

//web 强制解散房间接口
message DismissRoomWebRequest {
    uint32 room_id = 1;  // 6位房间号
    uint32 game_type = 2;
    uint32 app_id = 3;
    string owner = 4;
    string room_uuid = 5;
}

message DismissRoomWebResponse {
    uint32 code = 1;  // 返回解散房间结果
    uint32 room_id = 2;  // 6位房间号
    uint32 game_type = 3;
    uint32 app_id = 4;
    string owner = 5;
}

// web 查询房间是否存在接口
message ExistRoomWebRequest {
	uint32 room_id = 1;
}

message ExistRoomWebResponse {
	bool flag = 1;
}

// 退款
message RefundWebResponse {
    uint32 code = 1;  
    uint32 room_id = 2;  // 6位房间号
    uint32 game_type = 3;
    uint32 app_id = 4;
    string owner = 5;
    string room_uuid = 6;
}

// 向web汇报负载，每当一个房间开局后向web汇报一次， 每当一个房间大结算完后也汇报一次
message LoadPlusWebResponse {
    string addr = 1;
    uint32 port = 2;
}

message LoadMinusWebResponse {
    string addr = 1;
    uint32 port = 2;
}

// 提供web查询本进程的负载
message LoadBalanceWebResponse {
    message Unit {
        uint32 room_id = 1;  // 6位房间号
        uint32 room_status = 2; //房间状态
        repeated string player = 3; // 在房间的玩家UUID
        string owner = 4;
        uint32 game_type = 5;
        uint32 app_id = 6;
        string room_uuid = 7;
        uint32 st = 8;
    }
    repeated Unit unit = 1;
}

// 提供web查询本进程的运行数据
message RunningWebReponse {
	uint32 sessions = 1;  // 当前连接数
	uint32 players = 2;  // 当前在线玩家数
	uint32 tables_initial = 3;  // 未开局桌子数
	uint32 tables_playing = 4;  // 已开局桌子数
}

